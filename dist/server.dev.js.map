{"version":3,"sources":["server.js"],"names":["require","config","express","app","ejs","path","expressLayout","PORT","process","env","mongoose","session","flash","MongoDbStore","passport","Emitter","connect","MONGO_CONNECTION_URL","useNewUrlParser","useCreateIndex","useUnifiedTopology","useFindAndModify","connection","once","console","log","err","eventEmitter","set","use","secret","COOKIE_SECRET","resave","store","create","mongoUrl","saveUninitialized","cookie","maxAge","passportInit","initialize","urlencoded","extended","json","req","res","next","locals","user","join","__dirname","reqq","status","render","server","listen","io","on","socket","orderId","data","to","id","emit"],"mappings":"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","sourcesContent":["require('dotenv').config()\r\nconst express = require('express')\r\nconst app = express()\r\nconst ejs = require('ejs')\r\nconst path = require('path')\r\nconst expressLayout = require('express-ejs-layouts')\r\nconst PORT = process.env.PORT || 3000\r\nconst mongoose = require('mongoose')\r\nconst session = require('express-session')\r\nconst flash = require('express-flash')\r\nconst MongoDbStore = require('connect-mongo')\r\n\r\nconst passport = require('passport')\r\nconst Emitter = require('events')\r\n\r\n\r\n// Database connection\r\n\r\n\r\nmongoose.connect(process.env.MONGO_CONNECTION_URL, { useNewUrlParser: true, useCreateIndex:true, useUnifiedTopology: true, useFindAndModify : true });\r\nconst connection = mongoose.connection;\r\nconnection.once('open', () => {\r\n    console.log('Database connected...');\r\n}).catch(err => {\r\n    console.log('Connection failed...')\r\n});\r\n\r\n//Event emiiter\r\n\r\nconst eventEmitter = new Emitter()\r\napp.set('eventEmitter', eventEmitter)\r\n\r\n\r\n\r\n// Session config\r\napp.use(session({\r\nsecret: process.env.COOKIE_SECRET,\r\nresave: false,\r\nstore: MongoDbStore.create({\r\n    mongoUrl: process.env.MONGO_CONNECTION_URL\r\n}),\r\nsaveUninitialized: false,\r\ncookie: { maxAge: 1000 * 60 * 60 * 24 } // 24 hour\r\n}))\r\n\r\n\r\n//Passport config\r\n\r\nconst passportInit = require('./app/config/passport')\r\npassportInit(passport)\r\n\r\napp.use(passport.initialize())\r\napp.use(passport.session())\r\n\r\n\r\n\r\n\r\n\r\napp.use(flash())\r\n\r\n\r\n//Assets\r\napp.use(express.static('public'))\r\napp.use(express.urlencoded({ extended: false}))\r\napp.use(express.json())\r\n\r\n//Global middlewares\r\napp.use((req, res, next) =>{\r\n   res.locals.session = req.session\r\n   res.locals.user = req.user\r\n   next()\r\n})\r\n\r\n//set template engine\r\n\r\napp.use(expressLayout)\r\napp.set('views', path.join(__dirname, '/resources/views'))\r\napp.set('view engine', 'ejs')\r\n\r\nrequire('./routes/web')(app)\r\n\r\napp.use((reqq, res) =>{\r\n    res.status(404).render('errors/404')\r\n})\r\nconst server = app.listen(3000, () => {\r\n    console.log(`Listening on port ${PORT}`)\r\n})\r\n\r\n//Socket\r\n\r\nconst io = require('socket.io')(server)\r\nio.on('connection', (socket)=>{\r\n     \r\n     socket.on('join', (orderId) =>{\r\n           socket.join(orderId)\r\n     })\r\n})\r\n\r\n\r\neventEmitter.on('orderUpdated', (data) => {\r\n    io.to(`order_${data.id}`).emit('orderUpdated', data)\r\n})\r\n\r\neventEmitter.on('orderPlaced', (data) => {\r\n    io.to('adminRoom').emit('orderPlaced', data)\r\n})"],"file":"server.dev.js"}