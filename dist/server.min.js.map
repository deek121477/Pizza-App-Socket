{"version":3,"sources":["server.js"],"names":["require","config","express","ejs","expressLayout","app","env","PORT","mongoose","flash","path","session","MONGO_CONNECTION_URL","useNewUrlParser","useCreateIndex","useUnifiedTopology","useFindAndModify","connection","once","console","log","MongoDbStore","use","passport","secret","process","COOKIE_SECRET","resave","passportInit","store","create","cookie","maxAge","urlencoded","extended","json","next","res","locals","join","__dirname","set","listen"],"mappings":"aAAAA,QAAQ,UAAUC,SAClB,IAAMC,QAAUF,QAAQ,WADxBA,IAAQE,UAGFC,IAAMH,QAAQ,OAFdE,KAAOF,QAAU,QAIjBI,cAAgBJ,QAAQ,uBAHxBK,KAAMH,QAAZI,IAAAC,MAAA,IAKMC,SAAWR,QAAQ,YAJnBG,QAAMH,QAAZ,mBAMMS,MAAQT,QAAQ,iBALhBU,aAAeV,QAArB,iBACMI,SAAaJ,QAAGA,YAGtBQ,SAAMG,QAAUX,QAAQM,IAAAM,qBAAxB,CAAAC,iBAAA,EAAAC,gBAAA,EAAAC,oBAAA,EAAAC,kBAAA,IAWA,IAAMC,WAAaT,SAASS,WAV5BA,WAAWC,KAAGlB,OAAQ,WAYlBmB,QAAQC,IAAI,2BAZhB,MACMC,SAAAA,GAaFF,QAAQC,IAAI,0BALqCP,IAAAA,aAAiBb,QAAnB,yBAAyBc,aAAAA,UAA+CE,IAAAA,IAAAA,SAAAA,cAAxEX,IAAnDiB,IAAAC,SAAAZ,WAMCN,IAEDiB,IAAAX,QAAA,CAaAa,OAAQC,QAAQnB,IAAIoB,cAXpBC,QAAMC,EAaNC,MAAOR,aAAaS,OAAO,CAZ3BF,SAAaL,QAAbjB,IAAAM,uBAGAP,mBAAiBM,EAajBoB,OAAQ,CAAEC,OAAQ,UAJS3B,IAHXiB,IAAAb,SAORJ,IAAgCiB,IAAApB,QAAA,OAAA,WAWxCG,IAAIiB,IAAIpB,QAAQ+B,WAAW,CAAEC,UAAU,KAlBvB7B,IAAhBiB,IAAApB,QAAAiC,QAiBA9B,IAAIiB,IAAIpB,SAAAA,EAAAA,EAAOkC,GACZC,EAAHC,OAAQpC,QAAQ+B,EAAWtB,QAAEuB,MAK1BG,IAAAA,IAAIC,eACJF,IAAAA,IAAI,QAAA1B,KAAA6B,KAAAC,UAAA,qBACNnC,IAEDoC,IAAA,cAAA,OAEApC,QAAQD,eAARC,CAAAA,KAOAA,IAAIqC,OAAO,IAAM,WAHjB1C,QAAQoB,IAARpB,qBAAAA,OAAAO","file":"server.min.js","sourcesContent":["require('dotenv').config()\r\nconst express = require('express')\r\nconst app = express()\r\nconst ejs = require('ejs')\r\nconst path = require('path')\r\nconst expressLayout = require('express-ejs-layouts')\r\nconst PORT = process.env.PORT || 3000\r\nconst mongoose = require('mongoose')\r\nconst session = require('express-session')\r\nconst flash = require('express-flash')\r\nconst MongoDbStore = require('connect-mongo')\r\n\r\nconst passport = require('passport')\r\n\r\n\r\n// Database connection\r\n\r\n\r\nmongoose.connect(process.env.MONGO_CONNECTION_URL, { useNewUrlParser: true, useCreateIndex:true, useUnifiedTopology: true, useFindAndModify : true });\r\nconst connection = mongoose.connection;\r\nconnection.once('open', () => {\r\n    console.log('Database connected...');\r\n}).catch(err => {\r\n    console.log('Connection failed...')\r\n});\r\n\r\n//Passport config\r\n\r\nconst passportInit = require('./app/config/passport')\r\npassportInit(passport)\r\n\r\napp.use(passport.initialize())\r\napp.use(passport.session())\r\n\r\n\r\n\r\n\r\n// Session config\r\napp.use(session({\r\nsecret: process.env.COOKIE_SECRET,\r\nresave: false,\r\nstore: MongoDbStore.create({\r\n    mongoUrl: process.env.MONGO_CONNECTION_URL\r\n}),\r\nsaveUninitialized: false,\r\ncookie: { maxAge: 1000 * 60 * 60 * 24 } // 24 hour\r\n}))\r\n\r\n\r\n\r\n\r\napp.use(flash())\r\n\r\n\r\n//Assets\r\napp.use(express.static('public'))\r\napp.use(express.urlencoded({ extended: false}))\r\napp.use(express.json())\r\n\r\n//Global middlewares\r\napp.use((req, res, next) =>{\r\n   res.locals.session = req.session\r\n   next()\r\n})\r\n\r\n//set template engine\r\n\r\napp.use(expressLayout)\r\napp.set('views', path.join(__dirname, '/resources/views'))\r\napp.set('view engine', 'ejs')\r\n\r\nrequire('./routes/web')(app)\r\n\r\n\r\napp.listen(3000, () => {\r\n    console.log(`Listening on port ${PORT}`)\r\n})"]}