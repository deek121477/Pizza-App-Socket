{"version":3,"sources":["orderController.js"],"names":["Order","require","moment","orderController","_req$body","req","body","address","phone","flash","res","redirect","customerId","user","_id","items","cart","save","result","session","order","index","orders","regeneratorRuntime","async","_context","prev","next","awrap","find","sort","createdAt","sent","render","stop","module","exports"],"mappings":"aAAA,IAAMA,MAAQC,QAAQ,yBAChBC,OAASD,QAAQ,UADvB,SAAWE,kBAGP,MAAM,CAFJD,MAEI,SAFKD,EAAAA,GAAQ,IAAAG,EACGC,EAAAC,KAAjBH,EADcC,EACdD,MAAiBI,EADHH,EACGG,QAChB,IAAAC,IAAAD,EAEE,OAFFF,EAAAI,MACIJ,QADJ,+BAEEK,EAAAC,SAAA,SADW,IAEIJ,MAAAA,CAOXK,WAAYP,EAAIQ,KAAKC,IANtBC,MAAWR,EAAAA,QAAQS,KAAAD,MACdN,MAAAA,EACGC,QAAAA,IAGGO,OAAIjB,KAAM,SAAAkB,GAGpBV,OAFAI,EAAYP,MAAIQ,UADI,oCAETM,EAAQH,QAAKD,KAFJL,EAAAC,SAAA,sBAAlBS,MAIFb,SAAAA,GAGJ,OAPAF,EAAAI,MAAA,QAAA,wBAOAC,EAAkBC,SAAAO,YAAlBG,MAhBF,SAoBWhB,EAAAK,GApBX,IAAAY,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAqByB5B,MAAA6B,KAAA,CAAAjB,WAAnBP,EAAAQ,KAAAC,KAAA,KAAA,CAAAgB,KAAA,CAAAC,WAAA,MArBN,KAAA,EAqBgBT,EArBhBG,EAAAO,KAsBMtB,EAAOA,OAAIC,gBAAX,YANJD,EAAAuB,OAAA,mBAAA,CAAAX,OAAAA,EAAApB,OAAAA,SAhBF,KAAA,EAAA,IAAA,MAAA,OAAAuB,EAAAS,YAAAC,OAAAC,QAAAjC","file":"orderController.min.js","sourcesContent":["const Order = require('../../../models/order')\r\nconst moment = require('moment')\r\nfunction orderController(){\r\n    return{\r\n        store(req, res){\r\n            //Validate request\r\n            const { phone, address } = req.body\r\n            if(!phone || !address){\r\n                req.flash('error', 'Please fill all the fields.')\r\n                return res.redirect('/cart')\r\n            }\r\n\r\n            const order = new Order({\r\n                customerId: req.user._id,\r\n                items: req.session.cart.items,\r\n                phone,\r\n                address\r\n            })\r\n\r\n            order.save().then(result =>{\r\n                req.flash('success', 'Order placed Successfully')\r\n                delete req.session.cart \r\n                return res.redirect('/customer/orders')\r\n            }).catch(err =>{\r\n                req.flash('error', 'Something went wrong')\r\n                return res.redirect('/cart')\r\n            })\r\n        },\r\n\r\n        async index(req, res){\r\n            const orders = await Order.find({ customerId: req.user._id }, null, { sort:{ 'createdAt': -1 }})\r\n            res.header('Cache-Control', 'no-store')\r\n            res.render('customers/orders', {orders: orders, moment: moment})\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = orderController"]}