{"version":3,"sources":["orderController.js"],"names":["Order","require","moment","orderController","_req$body","req","body","address","phone","flash","res","redirect","customerId","user","_id","items","cart","save","result","path","err","placedOrder","session","app","get","emit","order","eventEmitter","index","orders","regeneratorRuntime","async","_context","prev","next","awrap","find","sort","createdAt","sent","header","render","stop","show","_context2","findById","params","id","toString","abrupt","module","exports"],"mappings":"aAAA,IAAMA,MAAQC,QAAQ,yBAChBC,OAASD,QAAQ,UADvB,SAAWE,kBAGP,MAAM,CAFJD,MAEI,SAFKD,EAAAA,GAAQ,IAAAG,EACGC,EAAAC,KAAjBH,EADcC,EACdD,MAAiBI,EADHH,EACGG,QAChB,IAAAC,IAAAD,EAEE,OAFFF,EAAAI,MACIJ,QADJ,+BAEEK,EAAAC,SAAA,SADW,IAEIJ,MAAAA,CAOXK,WAAYP,EAAIQ,KAAKC,IANtBC,MAAWR,EAAAA,QAAQS,KAAAD,MACdN,MAAAA,EACGC,QAAAA,IAGGO,OAAIjB,KAAM,SAAAkB,GACpBN,MAAYP,SAASS,EADD,CAAAK,KAAA,cAAA,SAAAC,EAAAC,GAQW,OANpBC,EAAAA,MAAQN,UAFC,oCAAAX,EAAAiB,QAAAN,KAAxBX,EAAAkB,IAAAC,IAAA,gBAOkBC,KAAAP,cAASG,GACQX,EAAAC,SAAA,wBAR7Be,MAYIC,SAAAA,GAGN,OAFAA,EAAAA,MAAaF,QAAK,wBAEPd,EAAAA,SAAS,YAOpBiB,MA/BN,SA+BiBjB,EAAAA,GA/BjB,IAAAkB,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAgBEnC,MAAAoC,KAAA,CAAAxB,WAAAP,EAAAQ,KAAAC,KAAA,KAAA,CAAAuB,KAAA,CAAAC,WAAA,MAhBF,KAAA,EAgBET,EAhBFG,EAAAO,KAAA7B,EAAA8B,OAAA,gBAAA,YAAA9B,EAAA+B,OAAA,mBAAA,CAAAZ,OAAAA,EAAA3B,OAAAA,SAAA,KAAA,EAAA,IAAA,MAAA,OAAA8B,EAAAU,WAAAC,KAAA,SAAAtC,EAAAK,GAAA,IAAAgB,EAAA,OAAAI,mBAAAC,MAAA,SAAAa,GAAA,OAAA,OAAAA,EAAAX,KAAAW,EAAAV,MAAA,KAAA,EAAA,OAAAU,EAAAV,KAAA,EAAAJ,mBAAAK,MAAAnC,MAAA6C,SAAAxC,EAAAyC,OAAAC,KAAA,KAAA,EAAA,GAAArB,EAAAkB,EAAAL,KAAAlC,EAAAQ,KAAAC,IAAAkC,aAAAtB,EAAAd,WAAAoC,WAAA,OAAAJ,EAAAK,OAAA,SAAAvC,EAAA+B,OAAA,wBAoCkC,CAAAf,MAAAA,KApClCkB,EAAAV,KAAA,EAAA,MAAA,KAAA,EAAA,OAAAU,EAAAK,OAAA,SAoCsEvC,EAAAC,SAAA,MApCtE,KAAA,EAAA,IAAA,MAAA,OAAAiC,EAAAF,YAAAQ,OAAAC,QAAAhD","file":"orderController.min.js","sourcesContent":["const Order = require('../../../models/order')\r\nconst moment = require('moment')\r\nfunction orderController(){\r\n    return{\r\n        store(req, res){\r\n            //Validate request\r\n            const { phone, address } = req.body\r\n            if(!phone || !address){\r\n                req.flash('error', 'Please fill all the fields.')\r\n                return res.redirect('/cart')\r\n            }\r\n\r\n            const order = new Order({\r\n                customerId: req.user._id,\r\n                items: req.session.cart.items,\r\n                phone,\r\n                address\r\n            })\r\n\r\n            order.save().then(result =>{\r\n                Order.populate(result, { path: 'customerId'}, (err, placedOrder)=>{\r\n                    req.flash('success', 'Order placed Successfully')\r\n                delete req.session.cart \r\n                // Emit event \r\n                const eventEmitter = req.app.get('eventEmitter')\r\n                eventEmitter.emit('orderPlaced', placedOrder)\r\n\r\n                return res.redirect('/customer/orders')\r\n\r\n                })\r\n               \r\n     \r\n            }).catch(err =>{\r\n                req.flash('error', 'Something went wrong')\r\n                return res.redirect('/cart')\r\n            })\r\n        },\r\n\r\n        async index(req, res){\r\n            const orders = await Order.find({ customerId: req.user._id }, null, { sort:{ 'createdAt': -1 }})\r\n            res.header('Cache-Control', 'no-store')\r\n            res.render('customers/orders', {orders: orders, moment: moment})\r\n        },\r\n\r\n        async show(req, res){\r\n            const order = await Order.findById(req.params.id)\r\n            //User authorization\r\n            if(req.user._id.toString() === order.customerId.toString()){\r\n                return  res.render('customers/singleOrder', { order })\r\n            }else{\r\n                return res.redirect('/')\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = orderController"]}