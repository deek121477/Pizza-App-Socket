{"version":3,"sources":["orderController.js"],"names":["Order","require","moment","orderController","store","req","res","body","phone","address","flash","redirect","order","customerId","user","_id","items","session","cart","save","then","result","err","index","find","sort","orders","header","render","module","exports"],"mappings":";;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAArB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,SAASE,eAAT,GAA0B;AACtB,SAAM;AACFC,IAAAA,KADE,iBACIC,GADJ,EACSC,GADT,EACa;AACX;AADW,sBAEgBD,GAAG,CAACE,IAFpB;AAAA,UAEHC,KAFG,aAEHA,KAFG;AAAA,UAEIC,OAFJ,aAEIA,OAFJ;;AAGX,UAAG,CAACD,KAAD,IAAU,CAACC,OAAd,EAAsB;AAClBJ,QAAAA,GAAG,CAACK,KAAJ,CAAU,OAAV,EAAmB,6BAAnB;AACA,eAAOJ,GAAG,CAACK,QAAJ,CAAa,OAAb,CAAP;AACH;;AAED,UAAMC,KAAK,GAAG,IAAIZ,KAAJ,CAAU;AACpBa,QAAAA,UAAU,EAAER,GAAG,CAACS,IAAJ,CAASC,GADD;AAEpBC,QAAAA,KAAK,EAAEX,GAAG,CAACY,OAAJ,CAAYC,IAAZ,CAAiBF,KAFJ;AAGpBR,QAAAA,KAAK,EAALA,KAHoB;AAIpBC,QAAAA,OAAO,EAAPA;AAJoB,OAAV,CAAd;AAOAG,MAAAA,KAAK,CAACO,IAAN,GAAaC,IAAb,CAAkB,UAAAC,MAAM,EAAG;AACvBhB,QAAAA,GAAG,CAACK,KAAJ,CAAU,SAAV,EAAqB,2BAArB;AACA,eAAOL,GAAG,CAACY,OAAJ,CAAYC,IAAnB;AACA,eAAOZ,GAAG,CAACK,QAAJ,CAAa,kBAAb,CAAP;AACH,OAJD,WAIS,UAAAW,GAAG,EAAG;AACXjB,QAAAA,GAAG,CAACK,KAAJ,CAAU,OAAV,EAAmB,sBAAnB;AACA,eAAOJ,GAAG,CAACK,QAAJ,CAAa,OAAb,CAAP;AACH,OAPD;AAQH,KAxBC;AA0BIY,IAAAA,KA1BJ,iBA0BUlB,GA1BV,EA0BeC,GA1Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CA2BuBN,KAAK,CAACwB,IAAN,CAAW;AAAEX,gBAAAA,UAAU,EAAER,GAAG,CAACS,IAAJ,CAASC;AAAvB,eAAX,EAAyC,IAAzC,EAA+C;AAAEU,gBAAAA,IAAI,EAAC;AAAE,+BAAa,CAAC;AAAhB;AAAP,eAA/C,CA3BvB;;AAAA;AA2BQC,cAAAA,MA3BR;AA4BEpB,cAAAA,GAAG,CAACqB,MAAJ,CAAW,eAAX,EAA4B,UAA5B;AACArB,cAAAA,GAAG,CAACsB,MAAJ,CAAW,kBAAX,EAA+B;AAACF,gBAAAA,MAAM,EAAEA,MAAT;AAAiBxB,gBAAAA,MAAM,EAAEA;AAAzB,eAA/B;;AA7BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAgCH;;AAED2B,MAAM,CAACC,OAAP,GAAiB3B,eAAjB","sourcesContent":["const Order = require('../../../models/order')\r\nconst moment = require('moment')\r\nfunction orderController(){\r\n    return{\r\n        store(req, res){\r\n            //Validate request\r\n            const { phone, address } = req.body\r\n            if(!phone || !address){\r\n                req.flash('error', 'Please fill all the fields.')\r\n                return res.redirect('/cart')\r\n            }\r\n\r\n            const order = new Order({\r\n                customerId: req.user._id,\r\n                items: req.session.cart.items,\r\n                phone,\r\n                address\r\n            })\r\n\r\n            order.save().then(result =>{\r\n                req.flash('success', 'Order placed Successfully')\r\n                delete req.session.cart \r\n                return res.redirect('/customer/orders')\r\n            }).catch(err =>{\r\n                req.flash('error', 'Something went wrong')\r\n                return res.redirect('/cart')\r\n            })\r\n        },\r\n\r\n        async index(req, res){\r\n            const orders = await Order.find({ customerId: req.user._id }, null, { sort:{ 'createdAt': -1 }})\r\n            res.header('Cache-Control', 'no-store')\r\n            res.render('customers/orders', {orders: orders, moment: moment})\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = orderController"],"file":"orderController.dev.js"}