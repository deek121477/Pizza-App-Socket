{"version":3,"sources":["orderController.js"],"names":["Order","require","moment","orderController","store","req","res","body","phone","address","flash","redirect","order","customerId","user","_id","items","session","cart","save","then","result","populate","path","err","placedOrder","eventEmitter","app","get","emit","index","find","sort","orders","header","render","show","findById","params","id","toString","module","exports"],"mappings":"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","sourcesContent":["const Order = require('../../../models/order')\r\nconst moment = require('moment')\r\nfunction orderController(){\r\n    return{\r\n        store(req, res){\r\n            //Validate request\r\n            const { phone, address } = req.body\r\n            if(!phone || !address){\r\n                req.flash('error', 'Please fill all the fields.')\r\n                return res.redirect('/cart')\r\n            }\r\n\r\n            const order = new Order({\r\n                customerId: req.user._id,\r\n                items: req.session.cart.items,\r\n                phone,\r\n                address\r\n            })\r\n\r\n            order.save().then(result =>{\r\n                Order.populate(result, { path: 'customerId'}, (err, placedOrder)=>{\r\n                    req.flash('success', 'Order placed Successfully')\r\n                delete req.session.cart \r\n                // Emit event \r\n                const eventEmitter = req.app.get('eventEmitter')\r\n                eventEmitter.emit('orderPlaced', placedOrder)\r\n\r\n                return res.redirect('/customer/orders')\r\n\r\n                })\r\n               \r\n     \r\n            }).catch(err =>{\r\n                req.flash('error', 'Something went wrong')\r\n                return res.redirect('/cart')\r\n            })\r\n        },\r\n\r\n        async index(req, res){\r\n            const orders = await Order.find({ customerId: req.user._id }, null, { sort:{ 'createdAt': -1 }})\r\n            res.header('Cache-Control', 'no-store')\r\n            res.render('customers/orders', {orders: orders, moment: moment})\r\n        },\r\n\r\n        async show(req, res){\r\n            const order = await Order.findById(req.params.id)\r\n            //User authorization\r\n            if(req.user._id.toString() === order.customerId.toString()){\r\n                return  res.render('customers/singleOrder', { order })\r\n            }else{\r\n                return res.redirect('/')\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = orderController"],"file":"orderController.dev.js"}