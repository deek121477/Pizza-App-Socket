{"version":3,"sources":["authController.js"],"names":["require","request","passport","User","bcrypt","authController","login","req","res","render","postLogin","next","body","email","password","flash","redirect","authenticate","err","user","info","message","logIn","register","postRegister","name","exists","result","hash","hashedPassword","save","then","logout","module","exports"],"mappings":"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","sourcesContent":["const { request } = require(\"express\")\r\nconst passport = require('passport')\r\nconst User = require('../../models/user')\r\nconst bcrypt = require('bcrypt')\r\n\r\nfunction authController(){\r\n    return {\r\n        login(req, res){\r\n             res.render('auth/login')\r\n        },\r\n\r\n        postLogin(req, res, next){\r\n\r\n            const {email, password } = req.body\r\n           //Validate request\r\n           if(!email || !password){\r\n               req.flash('error', 'All fields are required')\r\n               return res.redirect('/login')\r\n           }\r\n              passport.authenticate('local', (err, user, info) =>{\r\n                   if(err){\r\n                       req.flash('error', info.message)\r\n                       return next(err)\r\n                   }   \r\n\r\n                    if(!user) {\r\n                    req.flash('error', info.message )\r\n                    return res.redirect('/login')\r\n                }\r\n\r\n                req.logIn(user, (err) => {\r\n                    if(err) {\r\n                        req.flash('error', info.message ) \r\n                        return next(err)\r\n                    }\r\n\r\n                    return res.redirect('/')\r\n                })\r\n            })(req, res, next)\r\n        },\r\n\r\n        register(req, res){\r\n            res.render('auth/register')\r\n       },\r\n\r\n       async postRegister (req, res) {\r\n           const { name, email, password } = req.body\r\n           //Validate request\r\n           if(!name || !email || !password){\r\n               req.flash('error', 'All fields are required')\r\n               req.flash('name', name)\r\n               req.flash('email', email)\r\n               return res.redirect('/register')\r\n           }\r\n\r\n           // Check if email exists \r\n         User.exists({ email: email }, (err, result) => {\r\n            if(result) {\r\n               req.flash('error', 'Email already taken')\r\n               req.flash('name', name)\r\n               req.flash('email', email) \r\n               return res.redirect('/register')\r\n            }\r\n        })\r\n\r\n        //Hash Password\r\n        const hashedPassword = await bcrypt.hash(password, 10)\r\n\r\n        // Create a user\r\n\r\n        const user = new User({\r\n            name,\r\n            email,\r\n            password: hashedPassword\r\n        })\r\n\r\n        user.save().then((user) =>{\r\n            //Login\r\n                return res.redirect('/')\r\n        }).catch(err =>{\r\n            req.flash('error', 'Something went wrong')\r\n            return res.redirect('/register')\r\n        })\r\n       },\r\n\r\n       logout(req, res){\r\n           req.logout()\r\n           return res.redirect('/login')\r\n       }\r\n    }\r\n}\r\n\r\nmodule.exports = authController"],"file":"authController.dev.js"}