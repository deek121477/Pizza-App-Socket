{"version":3,"sources":["admin.js"],"names":["_axios","_interopRequireDefault","require","_moment","_noty","initAdmin","markup","orderTableBody","document","querySelector","orders","axios","get","headers","X-Requested-With","then","res","data","renderItems","map","items","parsedItems","order","_id","Object","values","menuItem","concat","generateMarkup","name","qty","join","customerId","address","status","createdAt","format","paymentStatus","innerHTML","err","console","log"],"mappings":"gGAAA,IAAAA,OAAAC,uBAAAC,QAAA,UACAC,QAAAF,uBAAAC,QAAA,WACAE,MAAAH,uBAAAC,QAAA,iFAEQ,SAASG,YACb,IALJC,EAKUC,EAAiBC,SAASC,cAAc,mBAC1CC,EAAS,GALjBC,OAAAA,QAAAC,IAAA,gBAAA,CASQC,QAAS,CARjBC,mBAAA,oBAYOC,KAAK,SAAAC,GAVJN,EAASL,EAAYY,KACnBV,EA0BN,SAAwBG,GATxB,OAASQ,EAATC,IAAqBC,SAAAA,GACbC,MAAAA,gHAAAA,OACJC,EAAAC,IADIF,mCAAAA,OAZA,SAAAD,GAGLL,OAJUS,OAAAC,OAAAL,GAICD,IAAA,SAAAO,GACJ,MAAA,wBAAAC,OACGC,EAAelB,KAAxBmB,KADM,OAAAF,OACND,EAAAI,IADM,6BANVC,KASS,IAWNb,CAAAI,EAAAF,OANKC,gFAAAA,OAQwBC,EAAAU,WAAAH,KARxBR,wDAAAA,OASuBC,EAAAW,QATvBZ,0QAAAA,OA2DXC,EAAAC,IA3DWF,4YAAAA,OAyB4C,iBAAjBC,EAAMY,OAA4B,WAAa,GAzB1Eb,sHAAAA,OA2BkE,cAAjBC,EAAMY,OAAyB,WAAa,GA3B7Fb,wHAAAA,OA6BiE,aAAjBC,EAAMY,OAAwB,WAAa,GA7B3Fb,wHAAAA,OA+BkE,cAAjBC,EAAMY,OAAyB,WAAa,GA/B7Fb,2JAAAA,OAkCkE,cAAjBC,EAAMY,OAAyB,WAAa,GAlC7Fb,izBAAAA,QAkDW,EAAAlB,QAAA,SAAOmB,EAAMa,WAAWC,OAAO,WAlD1Cf,gGAAAA,OAqDWC,EAAMe,cAAgB,OAAS,WArD1ChB,0DAyDDU,KAAK,IA3ENxB,CAA0BE,GAC5BC,EAAJ4B,UAAAhC,IALJ,MAMI,SAAAiC,GAYIC,QAAQC,IAAIF","file":"admin.min.js","sourcesContent":["import axios from 'axios'\r\nimport moment from 'moment'\r\nimport Noty from 'noty'\r\n\r\n export function initAdmin() {\r\n    const orderTableBody = document.querySelector('#orderTableBody')\r\n    let orders = []\r\n    let markup\r\n\r\n    axios.get('/admin/orders', {\r\n        headers: {\r\n            \"X-Requested-With\": \"XMLHttpRequest\"\r\n        }\r\n\r\n    }).then(res =>{\r\n        orders = res.data \r\n        markup = generateMarkup(orders)\r\n        orderTableBody.innerHTML = markup\r\n    }).catch(err =>{\r\n        console.log(err)\r\n    })\r\n\r\n    function renderItems(items) {\r\n        let parsedItems = Object.values(items)\r\n        return parsedItems.map((menuItem) => {\r\n            return `\r\n                <p>${ menuItem.item.name } - ${ menuItem.qty } pcs </p>\r\n            `\r\n        }).join('')\r\n      }\r\n\r\n    function generateMarkup(orders) {\r\n        return orders.map(order => {\r\n            return `\r\n                <tr>\r\n                <td class=\"border px-4 py-2 text-green-900\">\r\n                    <p>${ order._id }</p>\r\n                    <div>${ renderItems(order.items) }</div>\r\n                </td>\r\n                <td class=\"border px-4 py-2\">${ order.customerId.name }</td>\r\n                <td class=\"border px-4 py-2\">${ order.address }</td>\r\n                <td class=\"border px-4 py-2\">\r\n                    <div class=\"inline-block relative w-64\">\r\n                        <form action=\"/admin/order/status\" method=\"POST\">\r\n                            <input type=\"hidden\" name=\"orderId\" value=\"${ order._id }\">\r\n                            <select name=\"status\" onchange=\"this.form.submit()\"\r\n                                class=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\">\r\n                                <option value=\"order_placed\"\r\n                                    ${ order.status === 'order_placed' ? 'selected' : '' }>\r\n                                    Placed</option>\r\n                                <option value=\"confirmed\" ${ order.status === 'confirmed' ? 'selected' : '' }>\r\n                                    Confirmed</option>\r\n                                <option value=\"prepared\" ${ order.status === 'prepared' ? 'selected' : '' }>\r\n                                    Prepared</option>\r\n                                <option value=\"delivered\" ${ order.status === 'delivered' ? 'selected' : '' }>\r\n                                    Delivered\r\n                                </option>\r\n                                <option value=\"completed\" ${ order.status === 'completed' ? 'selected' : '' }>\r\n                                    Completed\r\n                                </option>\r\n                            </select>\r\n                        </form>\r\n                        <div\r\n                            class=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                            <svg class=\"fill-current h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 20 20\">\r\n                                <path\r\n                                    d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </td>\r\n                <td class=\"border px-4 py-2\">\r\n                    ${ moment(order.createdAt).format('hh:mm A') }\r\n                </td>\r\n                <td class=\"border px-4 py-2\">\r\n                    ${ order.paymentStatus ? 'paid' : 'Not paid' }\r\n                </td>\r\n            </tr>\r\n        `\r\n        }).join('')\r\n    }\r\n}\r\n\r\n"]}